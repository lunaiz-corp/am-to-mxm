/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.28.3
 * source: am2mxm-api.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./google\\protobuf\\empty";
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
import * as grpc_web_1 from "grpc-web";
export class SearchQuery extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        query?: string;
        byok_session?: string;
        mxm_byok_key?: string;
        am_byok_teamid?: string;
        am_byok_keyid?: string;
        am_byok_key?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("query" in data && data.query != undefined) {
                this.query = data.query;
            }
            if ("byok_session" in data && data.byok_session != undefined) {
                this.byok_session = data.byok_session;
            }
            if ("mxm_byok_key" in data && data.mxm_byok_key != undefined) {
                this.mxm_byok_key = data.mxm_byok_key;
            }
            if ("am_byok_teamid" in data && data.am_byok_teamid != undefined) {
                this.am_byok_teamid = data.am_byok_teamid;
            }
            if ("am_byok_keyid" in data && data.am_byok_keyid != undefined) {
                this.am_byok_keyid = data.am_byok_keyid;
            }
            if ("am_byok_key" in data && data.am_byok_key != undefined) {
                this.am_byok_key = data.am_byok_key;
            }
        }
    }
    get query() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set query(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get byok_session() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set byok_session(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get mxm_byok_key() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set mxm_byok_key(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get am_byok_teamid() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set am_byok_teamid(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get am_byok_keyid() {
        return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
    }
    set am_byok_keyid(value: string) {
        pb_1.Message.setField(this, 5, value);
    }
    get am_byok_key() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set am_byok_key(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        query?: string;
        byok_session?: string;
        mxm_byok_key?: string;
        am_byok_teamid?: string;
        am_byok_keyid?: string;
        am_byok_key?: string;
    }): SearchQuery {
        const message = new SearchQuery({});
        if (data.query != null) {
            message.query = data.query;
        }
        if (data.byok_session != null) {
            message.byok_session = data.byok_session;
        }
        if (data.mxm_byok_key != null) {
            message.mxm_byok_key = data.mxm_byok_key;
        }
        if (data.am_byok_teamid != null) {
            message.am_byok_teamid = data.am_byok_teamid;
        }
        if (data.am_byok_keyid != null) {
            message.am_byok_keyid = data.am_byok_keyid;
        }
        if (data.am_byok_key != null) {
            message.am_byok_key = data.am_byok_key;
        }
        return message;
    }
    toObject() {
        const data: {
            query?: string;
            byok_session?: string;
            mxm_byok_key?: string;
            am_byok_teamid?: string;
            am_byok_keyid?: string;
            am_byok_key?: string;
        } = {};
        if (this.query != null) {
            data.query = this.query;
        }
        if (this.byok_session != null) {
            data.byok_session = this.byok_session;
        }
        if (this.mxm_byok_key != null) {
            data.mxm_byok_key = this.mxm_byok_key;
        }
        if (this.am_byok_teamid != null) {
            data.am_byok_teamid = this.am_byok_teamid;
        }
        if (this.am_byok_keyid != null) {
            data.am_byok_keyid = this.am_byok_keyid;
        }
        if (this.am_byok_key != null) {
            data.am_byok_key = this.am_byok_key;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.query.length)
            writer.writeString(1, this.query);
        if (this.byok_session.length)
            writer.writeString(2, this.byok_session);
        if (this.mxm_byok_key.length)
            writer.writeString(3, this.mxm_byok_key);
        if (this.am_byok_teamid.length)
            writer.writeString(4, this.am_byok_teamid);
        if (this.am_byok_keyid.length)
            writer.writeString(5, this.am_byok_keyid);
        if (this.am_byok_key.length)
            writer.writeString(6, this.am_byok_key);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SearchQuery {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SearchQuery();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.query = reader.readString();
                    break;
                case 2:
                    message.byok_session = reader.readString();
                    break;
                case 3:
                    message.mxm_byok_key = reader.readString();
                    break;
                case 4:
                    message.am_byok_teamid = reader.readString();
                    break;
                case 5:
                    message.am_byok_keyid = reader.readString();
                    break;
                case 6:
                    message.am_byok_key = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SearchQuery {
        return SearchQuery.deserialize(bytes);
    }
}
export class SearchResult extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        tracks?: TrackInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("tracks" in data && data.tracks != undefined) {
                this.tracks = data.tracks;
            }
        }
    }
    get tracks() {
        return pb_1.Message.getRepeatedWrapperField(this, TrackInfo, 1) as TrackInfo[];
    }
    set tracks(value: TrackInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    static fromObject(data: {
        tracks?: ReturnType<typeof TrackInfo.prototype.toObject>[];
    }): SearchResult {
        const message = new SearchResult({});
        if (data.tracks != null) {
            message.tracks = data.tracks.map(item => TrackInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            tracks?: ReturnType<typeof TrackInfo.prototype.toObject>[];
        } = {};
        if (this.tracks != null) {
            data.tracks = this.tracks.map((item: TrackInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.tracks.length)
            writer.writeRepeatedMessage(1, this.tracks, (item: TrackInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SearchResult {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SearchResult();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.tracks, () => pb_1.Message.addToRepeatedWrapperField(message, 1, TrackInfo.deserialize(reader), TrackInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SearchResult {
        return SearchResult.deserialize(bytes);
    }
}
export class ByokEncResult extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        session_key?: string;
        public_key?: ByokEncJwk;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("session_key" in data && data.session_key != undefined) {
                this.session_key = data.session_key;
            }
            if ("public_key" in data && data.public_key != undefined) {
                this.public_key = data.public_key;
            }
        }
    }
    get session_key() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set session_key(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get public_key() {
        return pb_1.Message.getWrapperField(this, ByokEncJwk, 2) as ByokEncJwk;
    }
    set public_key(value: ByokEncJwk) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_public_key() {
        return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data: {
        session_key?: string;
        public_key?: ReturnType<typeof ByokEncJwk.prototype.toObject>;
    }): ByokEncResult {
        const message = new ByokEncResult({});
        if (data.session_key != null) {
            message.session_key = data.session_key;
        }
        if (data.public_key != null) {
            message.public_key = ByokEncJwk.fromObject(data.public_key);
        }
        return message;
    }
    toObject() {
        const data: {
            session_key?: string;
            public_key?: ReturnType<typeof ByokEncJwk.prototype.toObject>;
        } = {};
        if (this.session_key != null) {
            data.session_key = this.session_key;
        }
        if (this.public_key != null) {
            data.public_key = this.public_key.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.session_key.length)
            writer.writeString(1, this.session_key);
        if (this.has_public_key)
            writer.writeMessage(2, this.public_key, () => this.public_key.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ByokEncResult {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ByokEncResult();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.session_key = reader.readString();
                    break;
                case 2:
                    reader.readMessage(message.public_key, () => message.public_key = ByokEncJwk.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ByokEncResult {
        return ByokEncResult.deserialize(bytes);
    }
}
export class ByokQuery extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        session_key?: string;
        mxm_byok_key?: string;
        am_byok_teamid?: string;
        am_byok_keyid?: string;
        am_byok_key?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("session_key" in data && data.session_key != undefined) {
                this.session_key = data.session_key;
            }
            if ("mxm_byok_key" in data && data.mxm_byok_key != undefined) {
                this.mxm_byok_key = data.mxm_byok_key;
            }
            if ("am_byok_teamid" in data && data.am_byok_teamid != undefined) {
                this.am_byok_teamid = data.am_byok_teamid;
            }
            if ("am_byok_keyid" in data && data.am_byok_keyid != undefined) {
                this.am_byok_keyid = data.am_byok_keyid;
            }
            if ("am_byok_key" in data && data.am_byok_key != undefined) {
                this.am_byok_key = data.am_byok_key;
            }
        }
    }
    get session_key() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set session_key(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get mxm_byok_key() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set mxm_byok_key(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get am_byok_teamid() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set am_byok_teamid(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get am_byok_keyid() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set am_byok_keyid(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get am_byok_key() {
        return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
    }
    set am_byok_key(value: string) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data: {
        session_key?: string;
        mxm_byok_key?: string;
        am_byok_teamid?: string;
        am_byok_keyid?: string;
        am_byok_key?: string;
    }): ByokQuery {
        const message = new ByokQuery({});
        if (data.session_key != null) {
            message.session_key = data.session_key;
        }
        if (data.mxm_byok_key != null) {
            message.mxm_byok_key = data.mxm_byok_key;
        }
        if (data.am_byok_teamid != null) {
            message.am_byok_teamid = data.am_byok_teamid;
        }
        if (data.am_byok_keyid != null) {
            message.am_byok_keyid = data.am_byok_keyid;
        }
        if (data.am_byok_key != null) {
            message.am_byok_key = data.am_byok_key;
        }
        return message;
    }
    toObject() {
        const data: {
            session_key?: string;
            mxm_byok_key?: string;
            am_byok_teamid?: string;
            am_byok_keyid?: string;
            am_byok_key?: string;
        } = {};
        if (this.session_key != null) {
            data.session_key = this.session_key;
        }
        if (this.mxm_byok_key != null) {
            data.mxm_byok_key = this.mxm_byok_key;
        }
        if (this.am_byok_teamid != null) {
            data.am_byok_teamid = this.am_byok_teamid;
        }
        if (this.am_byok_keyid != null) {
            data.am_byok_keyid = this.am_byok_keyid;
        }
        if (this.am_byok_key != null) {
            data.am_byok_key = this.am_byok_key;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.session_key.length)
            writer.writeString(1, this.session_key);
        if (this.mxm_byok_key.length)
            writer.writeString(2, this.mxm_byok_key);
        if (this.am_byok_teamid.length)
            writer.writeString(3, this.am_byok_teamid);
        if (this.am_byok_keyid.length)
            writer.writeString(4, this.am_byok_keyid);
        if (this.am_byok_key.length)
            writer.writeString(5, this.am_byok_key);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ByokQuery {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ByokQuery();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.session_key = reader.readString();
                    break;
                case 2:
                    message.mxm_byok_key = reader.readString();
                    break;
                case 3:
                    message.am_byok_teamid = reader.readString();
                    break;
                case 4:
                    message.am_byok_keyid = reader.readString();
                    break;
                case 5:
                    message.am_byok_key = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ByokQuery {
        return ByokQuery.deserialize(bytes);
    }
}
export class ByokResult extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        valid?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("valid" in data && data.valid != undefined) {
                this.valid = data.valid;
            }
        }
    }
    get valid() {
        return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
    }
    set valid(value: boolean) {
        pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: {
        valid?: boolean;
    }): ByokResult {
        const message = new ByokResult({});
        if (data.valid != null) {
            message.valid = data.valid;
        }
        return message;
    }
    toObject() {
        const data: {
            valid?: boolean;
        } = {};
        if (this.valid != null) {
            data.valid = this.valid;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.valid != false)
            writer.writeBool(1, this.valid);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ByokResult {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ByokResult();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.valid = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ByokResult {
        return ByokResult.deserialize(bytes);
    }
}
export class TrackInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        isrc?: string;
        title?: string;
        artist?: string;
        mxm_abstrack?: number;
        mxm_track_url?: string;
        mxm_album?: string;
        mxm_album_url?: string;
        am_track_url?: string;
        am_album_url?: string;
        am_thumbnail?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("isrc" in data && data.isrc != undefined) {
                this.isrc = data.isrc;
            }
            if ("title" in data && data.title != undefined) {
                this.title = data.title;
            }
            if ("artist" in data && data.artist != undefined) {
                this.artist = data.artist;
            }
            if ("mxm_abstrack" in data && data.mxm_abstrack != undefined) {
                this.mxm_abstrack = data.mxm_abstrack;
            }
            if ("mxm_track_url" in data && data.mxm_track_url != undefined) {
                this.mxm_track_url = data.mxm_track_url;
            }
            if ("mxm_album" in data && data.mxm_album != undefined) {
                this.mxm_album = data.mxm_album;
            }
            if ("mxm_album_url" in data && data.mxm_album_url != undefined) {
                this.mxm_album_url = data.mxm_album_url;
            }
            if ("am_track_url" in data && data.am_track_url != undefined) {
                this.am_track_url = data.am_track_url;
            }
            if ("am_album_url" in data && data.am_album_url != undefined) {
                this.am_album_url = data.am_album_url;
            }
            if ("am_thumbnail" in data && data.am_thumbnail != undefined) {
                this.am_thumbnail = data.am_thumbnail;
            }
        }
    }
    get isrc() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set isrc(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get title() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set title(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get artist() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set artist(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get mxm_abstrack() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set mxm_abstrack(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get mxm_track_url() {
        return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
    }
    set mxm_track_url(value: string) {
        pb_1.Message.setField(this, 5, value);
    }
    get mxm_album() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set mxm_album(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    get mxm_album_url() {
        return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
    }
    set mxm_album_url(value: string) {
        pb_1.Message.setField(this, 7, value);
    }
    get am_track_url() {
        return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
    }
    set am_track_url(value: string) {
        pb_1.Message.setField(this, 8, value);
    }
    get am_album_url() {
        return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
    }
    set am_album_url(value: string) {
        pb_1.Message.setField(this, 9, value);
    }
    get am_thumbnail() {
        return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
    }
    set am_thumbnail(value: string) {
        pb_1.Message.setField(this, 10, value);
    }
    static fromObject(data: {
        isrc?: string;
        title?: string;
        artist?: string;
        mxm_abstrack?: number;
        mxm_track_url?: string;
        mxm_album?: string;
        mxm_album_url?: string;
        am_track_url?: string;
        am_album_url?: string;
        am_thumbnail?: string;
    }): TrackInfo {
        const message = new TrackInfo({});
        if (data.isrc != null) {
            message.isrc = data.isrc;
        }
        if (data.title != null) {
            message.title = data.title;
        }
        if (data.artist != null) {
            message.artist = data.artist;
        }
        if (data.mxm_abstrack != null) {
            message.mxm_abstrack = data.mxm_abstrack;
        }
        if (data.mxm_track_url != null) {
            message.mxm_track_url = data.mxm_track_url;
        }
        if (data.mxm_album != null) {
            message.mxm_album = data.mxm_album;
        }
        if (data.mxm_album_url != null) {
            message.mxm_album_url = data.mxm_album_url;
        }
        if (data.am_track_url != null) {
            message.am_track_url = data.am_track_url;
        }
        if (data.am_album_url != null) {
            message.am_album_url = data.am_album_url;
        }
        if (data.am_thumbnail != null) {
            message.am_thumbnail = data.am_thumbnail;
        }
        return message;
    }
    toObject() {
        const data: {
            isrc?: string;
            title?: string;
            artist?: string;
            mxm_abstrack?: number;
            mxm_track_url?: string;
            mxm_album?: string;
            mxm_album_url?: string;
            am_track_url?: string;
            am_album_url?: string;
            am_thumbnail?: string;
        } = {};
        if (this.isrc != null) {
            data.isrc = this.isrc;
        }
        if (this.title != null) {
            data.title = this.title;
        }
        if (this.artist != null) {
            data.artist = this.artist;
        }
        if (this.mxm_abstrack != null) {
            data.mxm_abstrack = this.mxm_abstrack;
        }
        if (this.mxm_track_url != null) {
            data.mxm_track_url = this.mxm_track_url;
        }
        if (this.mxm_album != null) {
            data.mxm_album = this.mxm_album;
        }
        if (this.mxm_album_url != null) {
            data.mxm_album_url = this.mxm_album_url;
        }
        if (this.am_track_url != null) {
            data.am_track_url = this.am_track_url;
        }
        if (this.am_album_url != null) {
            data.am_album_url = this.am_album_url;
        }
        if (this.am_thumbnail != null) {
            data.am_thumbnail = this.am_thumbnail;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.isrc.length)
            writer.writeString(1, this.isrc);
        if (this.title.length)
            writer.writeString(2, this.title);
        if (this.artist.length)
            writer.writeString(3, this.artist);
        if (this.mxm_abstrack != 0)
            writer.writeInt32(4, this.mxm_abstrack);
        if (this.mxm_track_url.length)
            writer.writeString(5, this.mxm_track_url);
        if (this.mxm_album.length)
            writer.writeString(6, this.mxm_album);
        if (this.mxm_album_url.length)
            writer.writeString(7, this.mxm_album_url);
        if (this.am_track_url.length)
            writer.writeString(8, this.am_track_url);
        if (this.am_album_url.length)
            writer.writeString(9, this.am_album_url);
        if (this.am_thumbnail.length)
            writer.writeString(10, this.am_thumbnail);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TrackInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TrackInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.isrc = reader.readString();
                    break;
                case 2:
                    message.title = reader.readString();
                    break;
                case 3:
                    message.artist = reader.readString();
                    break;
                case 4:
                    message.mxm_abstrack = reader.readInt32();
                    break;
                case 5:
                    message.mxm_track_url = reader.readString();
                    break;
                case 6:
                    message.mxm_album = reader.readString();
                    break;
                case 7:
                    message.mxm_album_url = reader.readString();
                    break;
                case 8:
                    message.am_track_url = reader.readString();
                    break;
                case 9:
                    message.am_album_url = reader.readString();
                    break;
                case 10:
                    message.am_thumbnail = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TrackInfo {
        return TrackInfo.deserialize(bytes);
    }
}
export class ByokEncJwk extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        kty?: string;
        alg?: string;
        n?: string;
        e?: string;
        ext?: boolean;
        key_ops?: string[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("kty" in data && data.kty != undefined) {
                this.kty = data.kty;
            }
            if ("alg" in data && data.alg != undefined) {
                this.alg = data.alg;
            }
            if ("n" in data && data.n != undefined) {
                this.n = data.n;
            }
            if ("e" in data && data.e != undefined) {
                this.e = data.e;
            }
            if ("ext" in data && data.ext != undefined) {
                this.ext = data.ext;
            }
            if ("key_ops" in data && data.key_ops != undefined) {
                this.key_ops = data.key_ops;
            }
        }
    }
    get kty() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set kty(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get alg() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set alg(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get n() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set n(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get e() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set e(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get ext() {
        return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
    }
    set ext(value: boolean) {
        pb_1.Message.setField(this, 5, value);
    }
    get key_ops() {
        return pb_1.Message.getFieldWithDefault(this, 6, []) as string[];
    }
    set key_ops(value: string[]) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        kty?: string;
        alg?: string;
        n?: string;
        e?: string;
        ext?: boolean;
        key_ops?: string[];
    }): ByokEncJwk {
        const message = new ByokEncJwk({});
        if (data.kty != null) {
            message.kty = data.kty;
        }
        if (data.alg != null) {
            message.alg = data.alg;
        }
        if (data.n != null) {
            message.n = data.n;
        }
        if (data.e != null) {
            message.e = data.e;
        }
        if (data.ext != null) {
            message.ext = data.ext;
        }
        if (data.key_ops != null) {
            message.key_ops = data.key_ops;
        }
        return message;
    }
    toObject() {
        const data: {
            kty?: string;
            alg?: string;
            n?: string;
            e?: string;
            ext?: boolean;
            key_ops?: string[];
        } = {};
        if (this.kty != null) {
            data.kty = this.kty;
        }
        if (this.alg != null) {
            data.alg = this.alg;
        }
        if (this.n != null) {
            data.n = this.n;
        }
        if (this.e != null) {
            data.e = this.e;
        }
        if (this.ext != null) {
            data.ext = this.ext;
        }
        if (this.key_ops != null) {
            data.key_ops = this.key_ops;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.kty.length)
            writer.writeString(1, this.kty);
        if (this.alg.length)
            writer.writeString(2, this.alg);
        if (this.n.length)
            writer.writeString(3, this.n);
        if (this.e.length)
            writer.writeString(4, this.e);
        if (this.ext != false)
            writer.writeBool(5, this.ext);
        if (this.key_ops.length)
            writer.writeRepeatedString(6, this.key_ops);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ByokEncJwk {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ByokEncJwk();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.kty = reader.readString();
                    break;
                case 2:
                    message.alg = reader.readString();
                    break;
                case 3:
                    message.n = reader.readString();
                    break;
                case 4:
                    message.e = reader.readString();
                    break;
                case 5:
                    message.ext = reader.readBool();
                    break;
                case 6:
                    pb_1.Message.addToRepeatedField(message, 6, reader.readString());
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ByokEncJwk {
        return ByokEncJwk.deserialize(bytes);
    }
}
export abstract class UnimplementedSearchService {
    static definition = {
        SearchMxMLink: {
            path: "/lunaiz.am2mxm.api.v1.Search/SearchMxMLink",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: SearchQuery) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => SearchQuery.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: SearchResult) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => SearchResult.deserialize(new Uint8Array(bytes))
        },
        SearchAMSource: {
            path: "/lunaiz.am2mxm.api.v1.Search/SearchAMSource",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: SearchQuery) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => SearchQuery.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: SearchResult) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => SearchResult.deserialize(new Uint8Array(bytes))
        }
    };
    [method: string]: grpc_1.UntypedHandleCall;
    abstract SearchMxMLink(call: grpc_1.ServerUnaryCall<SearchQuery, SearchResult>, callback: grpc_1.sendUnaryData<SearchResult>): void;
    abstract SearchAMSource(call: grpc_1.ServerUnaryCall<SearchQuery, SearchResult>, callback: grpc_1.sendUnaryData<SearchResult>): void;
}
export class SearchClient {
    private _address: string;
    private _client: grpc_web_1.GrpcWebClientBase;
    constructor(address: string, credentials?: Object, options?: grpc_web_1.GrpcWebClientBaseOptions) {
        if (!options)
            options = {};
        options.format = options.format || "text";
        this._address = address;
        this._client = new grpc_web_1.GrpcWebClientBase(options);
    }
    private static SearchMxMLink = new grpc_web_1.MethodDescriptor<SearchQuery, SearchResult>("/lunaiz.am2mxm.api.v1.Search/SearchMxMLink", grpc_web_1.MethodType.UNARY, SearchQuery, SearchResult, (message: SearchQuery) => message.serialize(), SearchResult.deserialize);
    SearchMxMLink(message: SearchQuery, metadata: grpc_web_1.Metadata | null) {
        return this._client.thenableCall<SearchQuery, SearchResult>(this._address + "/lunaiz.am2mxm.api.v1.Search/SearchMxMLink", message, metadata || {}, SearchClient.SearchMxMLink);
    }
    private static SearchAMSource = new grpc_web_1.MethodDescriptor<SearchQuery, SearchResult>("/lunaiz.am2mxm.api.v1.Search/SearchAMSource", grpc_web_1.MethodType.UNARY, SearchQuery, SearchResult, (message: SearchQuery) => message.serialize(), SearchResult.deserialize);
    SearchAMSource(message: SearchQuery, metadata: grpc_web_1.Metadata | null) {
        return this._client.thenableCall<SearchQuery, SearchResult>(this._address + "/lunaiz.am2mxm.api.v1.Search/SearchAMSource", message, metadata || {}, SearchClient.SearchAMSource);
    }
}
export abstract class UnimplementedByokService {
    static definition = {
        getEncPublicKey: {
            path: "/lunaiz.am2mxm.api.v1.Byok/getEncPublicKey",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: dependency_1.Empty) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => dependency_1.Empty.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: ByokEncResult) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => ByokEncResult.deserialize(new Uint8Array(bytes))
        },
        checkMxMKeyValidity: {
            path: "/lunaiz.am2mxm.api.v1.Byok/checkMxMKeyValidity",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: ByokQuery) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => ByokQuery.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: ByokResult) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => ByokResult.deserialize(new Uint8Array(bytes))
        },
        checkAMKeyValidity: {
            path: "/lunaiz.am2mxm.api.v1.Byok/checkAMKeyValidity",
            requestStream: false,
            responseStream: false,
            requestSerialize: (message: ByokQuery) => Buffer.from(message.serialize()),
            requestDeserialize: (bytes: Buffer) => ByokQuery.deserialize(new Uint8Array(bytes)),
            responseSerialize: (message: ByokResult) => Buffer.from(message.serialize()),
            responseDeserialize: (bytes: Buffer) => ByokResult.deserialize(new Uint8Array(bytes))
        }
    };
    [method: string]: grpc_1.UntypedHandleCall;
    abstract getEncPublicKey(call: grpc_1.ServerUnaryCall<dependency_1.Empty, ByokEncResult>, callback: grpc_1.sendUnaryData<ByokEncResult>): void;
    abstract checkMxMKeyValidity(call: grpc_1.ServerUnaryCall<ByokQuery, ByokResult>, callback: grpc_1.sendUnaryData<ByokResult>): void;
    abstract checkAMKeyValidity(call: grpc_1.ServerUnaryCall<ByokQuery, ByokResult>, callback: grpc_1.sendUnaryData<ByokResult>): void;
}
export class ByokClient {
    private _address: string;
    private _client: grpc_web_1.GrpcWebClientBase;
    constructor(address: string, credentials?: Object, options?: grpc_web_1.GrpcWebClientBaseOptions) {
        if (!options)
            options = {};
        options.format = options.format || "text";
        this._address = address;
        this._client = new grpc_web_1.GrpcWebClientBase(options);
    }
    private static getEncPublicKey = new grpc_web_1.MethodDescriptor<dependency_1.Empty, ByokEncResult>("/lunaiz.am2mxm.api.v1.Byok/getEncPublicKey", grpc_web_1.MethodType.UNARY, dependency_1.Empty, ByokEncResult, (message: dependency_1.Empty) => message.serialize(), ByokEncResult.deserialize);
    getEncPublicKey(message: dependency_1.Empty, metadata: grpc_web_1.Metadata | null) {
        return this._client.thenableCall<dependency_1.Empty, ByokEncResult>(this._address + "/lunaiz.am2mxm.api.v1.Byok/getEncPublicKey", message, metadata || {}, ByokClient.getEncPublicKey);
    }
    private static checkMxMKeyValidity = new grpc_web_1.MethodDescriptor<ByokQuery, ByokResult>("/lunaiz.am2mxm.api.v1.Byok/checkMxMKeyValidity", grpc_web_1.MethodType.UNARY, ByokQuery, ByokResult, (message: ByokQuery) => message.serialize(), ByokResult.deserialize);
    checkMxMKeyValidity(message: ByokQuery, metadata: grpc_web_1.Metadata | null) {
        return this._client.thenableCall<ByokQuery, ByokResult>(this._address + "/lunaiz.am2mxm.api.v1.Byok/checkMxMKeyValidity", message, metadata || {}, ByokClient.checkMxMKeyValidity);
    }
    private static checkAMKeyValidity = new grpc_web_1.MethodDescriptor<ByokQuery, ByokResult>("/lunaiz.am2mxm.api.v1.Byok/checkAMKeyValidity", grpc_web_1.MethodType.UNARY, ByokQuery, ByokResult, (message: ByokQuery) => message.serialize(), ByokResult.deserialize);
    checkAMKeyValidity(message: ByokQuery, metadata: grpc_web_1.Metadata | null) {
        return this._client.thenableCall<ByokQuery, ByokResult>(this._address + "/lunaiz.am2mxm.api.v1.Byok/checkAMKeyValidity", message, metadata || {}, ByokClient.checkAMKeyValidity);
    }
}
